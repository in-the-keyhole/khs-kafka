[2015-08-25 15:40:31,449] TRACE Controller 0 epoch 3 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 15:40:31,450] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:31,472] ERROR Controller 0 epoch 3 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 15:40:31,567] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-25 15:40:42,994] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@63947c6b, name=log4j:logger=state.change.logger (state.change.logger)
[2015-08-25 15:40:53,969] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:53,992] ERROR Controller 0 epoch 4 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-25 15:40:54,202] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,237] TRACE Controller 0 epoch 4 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-25 15:40:54,240] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 3 (state.change.logger)
[2015-08-25 15:40:54,241] TRACE Controller 0 epoch 4 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,242] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,243] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,252] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:40:54,284] TRACE Controller 0 epoch 4 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,290] TRACE Controller 0 epoch 4 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 15:40:54,290] TRACE Controller 0 epoch 4 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,290] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,336] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 4 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,346] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 4 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,350] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 3 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-25 15:40:54,374] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 4 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,386] TRACE Controller 0 epoch 4 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:40:54,388] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:5,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2015-08-25 15:40:54,389] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:40:54,391] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 4 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,394] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 4 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,400] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,411] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 4 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:40:54,413] TRACE Controller 0 epoch 4 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:40:54,415] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 5 (state.change.logger)
[2015-08-25 15:40:54,416] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:41:25,543] TRACE Controller 0 epoch 4 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 15:41:25,544] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:41:25,606] ERROR Controller 0 epoch 4 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 15:41:25,635] TRACE Controller 0 epoch 4 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-25 15:41:38,613] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@63947c6b, name=log4j:logger=state.change.logger (state.change.logger)
[2015-08-25 15:42:17,443] TRACE Controller 0 epoch 5 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,466] ERROR Controller 0 epoch 5 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-25 15:42:17,712] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,733] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 3 (state.change.logger)
[2015-08-25 15:42:17,738] TRACE Controller 0 epoch 5 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-25 15:42:17,746] TRACE Controller 0 epoch 5 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,746] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,747] TRACE Controller 0 epoch 5 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,764] TRACE Controller 0 epoch 5 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:42:17,779] TRACE Controller 0 epoch 5 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,784] TRACE Controller 0 epoch 5 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 15:42:17,784] TRACE Controller 0 epoch 5 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:5) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,785] TRACE Controller 0 epoch 5 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:5) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,845] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,853] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 5 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,856] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 4 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-25 15:42:17,883] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 5 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,891] TRACE Controller 0 epoch 5 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:42:17,892] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:7,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 4 (state.change.logger)
[2015-08-25 15:42:17,894] TRACE Controller 0 epoch 5 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:42:17,895] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,897] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 5 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,901] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 5 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,913] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 5 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:42:17,914] TRACE Controller 0 epoch 5 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:42:17,917] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 5 with correlation id 5 (state.change.logger)
[2015-08-25 15:42:17,919] TRACE Controller 0 epoch 5 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:45:10,273] TRACE Controller 0 epoch 5 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 15:45:10,273] TRACE Controller 0 epoch 5 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:45:10,291] ERROR Controller 0 epoch 5 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 15:45:10,332] TRACE Controller 0 epoch 5 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-25 15:46:35,524] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@63947c6b, name=log4j:logger=state.change.logger (state.change.logger)
[2015-08-25 15:47:46,848] TRACE Controller 0 epoch 6 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:46,871] ERROR Controller 0 epoch 6 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-25 15:47:47,091] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,112] TRACE Controller 0 epoch 6 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-25 15:47:47,113] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 3 (state.change.logger)
[2015-08-25 15:47:47,117] TRACE Controller 0 epoch 6 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,117] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,118] TRACE Controller 0 epoch 6 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,143] TRACE Controller 0 epoch 6 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:47:47,149] TRACE Controller 0 epoch 6 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,153] TRACE Controller 0 epoch 6 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 15:47:47,154] TRACE Controller 0 epoch 6 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:6) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,154] TRACE Controller 0 epoch 6 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:6) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,208] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 6 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,217] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 6 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,220] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 5 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-25 15:47:47,244] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 6 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,254] TRACE Controller 0 epoch 6 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:47:47,258] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:9,ControllerEpoch:5),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 4 (state.change.logger)
[2015-08-25 15:47:47,259] TRACE Controller 0 epoch 6 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:47:47,261] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 6 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,263] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 6 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,267] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 6 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,276] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 6 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:47,277] TRACE Controller 0 epoch 6 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:47:47,279] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:6),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 6 with correlation id 5 (state.change.logger)
[2015-08-25 15:47:47,281] TRACE Controller 0 epoch 6 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 15:47:56,901] TRACE Controller 0 epoch 6 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 15:47:56,902] TRACE Controller 0 epoch 6 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 15:47:56,914] ERROR Controller 0 epoch 6 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 15:47:56,982] TRACE Controller 0 epoch 6 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
