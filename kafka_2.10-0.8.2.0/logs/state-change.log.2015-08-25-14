[2015-08-25 14:38:38,655] TRACE Controller 0 epoch 1 changed partition [pythontest,0] state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2015-08-25 14:38:38,692] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [pythontest,0] from NonExistentReplica to NewReplica (state.change.logger)
[2015-08-25 14:38:38,788] TRACE Controller 0 epoch 1 changed partition [pythontest,0] from NewPartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 14:38:38,826] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) with correlationId 7 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:38,872] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) with correlationId 7 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:38,938] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [pythontest,0] from NewReplica to OnlineReplica (state.change.logger)
[2015-08-25 14:38:38,982] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) correlation id 7 from controller 0 epoch 1 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:39,002] TRACE Broker 0 handling LeaderAndIsr request correlationId 7 from controller 0 epoch 1 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:39,021] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 7 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:39,152] TRACE Broker 0 completed LeaderAndIsr request correlationId 7 from controller 0 epoch 1 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:38:39,170] TRACE Controller 0 epoch 1 received response LeaderAndIsrResponse(7,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:38:39,178] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 7 (state.change.logger)
[2015-08-25 14:38:39,180] TRACE Controller 0 epoch 1 received response UpdateMetadataResponse(7,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:48:52,473] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@63947c6b, name=log4j:logger=state.change.logger (state.change.logger)
[2015-08-25 14:48:54,273] TRACE Controller 0 epoch 1 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 14:48:54,286] TRACE Controller 0 epoch 1 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:48:54,310] ERROR Controller 0 epoch 1 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 14:48:54,383] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-25 14:49:04,022] TRACE Controller 0 epoch 2 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,046] ERROR Controller 0 epoch 2 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-25 14:49:04,150] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,170] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-25 14:49:04,174] TRACE Controller 0 epoch 2 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,175] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,175] TRACE Controller 0 epoch 2 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,196] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 3 (state.change.logger)
[2015-08-25 14:49:04,203] TRACE Controller 0 epoch 2 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,207] TRACE Controller 0 epoch 2 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 14:49:04,207] TRACE Controller 0 epoch 2 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,208] TRACE Controller 0 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,217] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:49:04,276] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 2 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,284] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 2 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,309] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 1 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-25 14:49:04,333] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 2 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,341] TRACE Controller 0 epoch 2 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:49:04,342] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 4 (state.change.logger)
[2015-08-25 14:49:04,343] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:49:04,344] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 2 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,346] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 2 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,350] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 2 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,366] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 2 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:49:04,368] TRACE Controller 0 epoch 2 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:49:04,369] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 2 with correlation id 5 (state.change.logger)
[2015-08-25 14:49:04,370] TRACE Controller 0 epoch 2 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:50:32,046] TRACE Controller 0 epoch 2 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-25 14:50:32,047] TRACE Controller 0 epoch 2 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:50:32,058] ERROR Controller 0 epoch 2 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-25 14:50:32,084] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-25 14:50:53,807] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@63947c6b, name=log4j:logger=state.change.logger (state.change.logger)
[2015-08-25 14:51:00,386] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,410] ERROR Controller 0 epoch 3 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-25 14:51:00,656] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,676] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 3 (state.change.logger)
[2015-08-25 14:51:00,687] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-25 14:51:00,691] TRACE Controller 0 epoch 3 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,692] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,692] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,701] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:51:00,723] TRACE Controller 0 epoch 3 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,727] TRACE Controller 0 epoch 3 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-25 14:51:00,727] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,728] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,774] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 3 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,781] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 3 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,784] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 2 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-25 14:51:00,808] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 3 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,817] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:51:00,818] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2015-08-25 14:51:00,819] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:51:00,820] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 3 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,822] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 3 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,824] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 3 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,831] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 3 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-25 14:51:00,832] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
[2015-08-25 14:51:00,833] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 5 (state.change.logger)
[2015-08-25 14:51:00,834] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.106,port:9092 (state.change.logger)
