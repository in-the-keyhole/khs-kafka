[2015-08-20 15:34:09,469] TRACE Controller 0 epoch 2 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-20 15:34:09,471] TRACE Controller 0 epoch 2 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:09,493] ERROR Controller 0 epoch 2 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-20 15:34:09,545] TRACE Controller 0 epoch 2 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-20 15:34:21,327] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,350] ERROR Controller 0 epoch 3 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-20 15:34:21,465] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,485] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-20 15:34:21,490] TRACE Controller 0 epoch 3 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,491] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,492] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,514] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 3 (state.change.logger)
[2015-08-20 15:34:21,520] TRACE Controller 0 epoch 3 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,524] TRACE Controller 0 epoch 3 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-20 15:34:21,524] TRACE Controller 0 epoch 3 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,525] TRACE Controller 0 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,537] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:34:21,595] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 3 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,603] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 3 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,624] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 2 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-20 15:34:21,648] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 3 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,654] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:34:21,656] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:1,ControllerEpoch:2),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 4 (state.change.logger)
[2015-08-20 15:34:21,657] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:34:21,658] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 3 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,660] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 3 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,663] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 3 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,678] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 3 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:34:21,679] TRACE Controller 0 epoch 3 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:34:21,680] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 3 with correlation id 5 (state.change.logger)
[2015-08-20 15:34:21,681] TRACE Controller 0 epoch 3 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:46:20,667] TRACE Controller 0 epoch 3 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-20 15:46:20,668] TRACE Controller 0 epoch 3 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:20,690] ERROR Controller 0 epoch 3 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-20 15:46:20,717] TRACE Controller 0 epoch 3 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
[2015-08-20 15:46:43,692] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,718] ERROR Controller 0 epoch 4 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:314)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:161)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:81)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:49)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:47)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:47)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:650)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:646)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.KafkaController.startup(KafkaController.scala:646)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:117)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2015-08-20 15:46:43,816] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3) with correlationId 3 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,834] TRACE Controller 0 epoch 4 changed state of replica 0 for partition [pythontest,0] from ReplicaDeletionIneligible to OnlineReplica (state.change.logger)
[2015-08-20 15:46:43,839] TRACE Controller 0 epoch 4 sending become-follower LeaderAndIsr request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,839] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3) with correlationId 4 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,840] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,860] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 3 (state.change.logger)
[2015-08-20 15:46:43,865] TRACE Controller 0 epoch 4 elected leader 0 for Offline partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,869] TRACE Controller 0 epoch 4 changed partition [pythontest,0] from OfflinePartition to OnlinePartition with leader 0 (state.change.logger)
[2015-08-20 15:46:43,869] TRACE Controller 0 epoch 4 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,870] TRACE Controller 0 epoch 4 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4) with correlationId 5 to broker 0 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,896] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(3,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:46:43,969] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) correlation id 4 from controller 0 epoch 4 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,978] TRACE Broker 0 handling LeaderAndIsr request correlationId 4 from controller 0 epoch 4 starting the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:43,982] ERROR Broker 0 received LeaderAndIsrRequest with correlation id 4 from controller 0 epoch 3 for partition [pythontest,0] but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2015-08-20 15:46:44,007] TRACE Broker 0 completed LeaderAndIsr request correlationId 4 from controller 0 epoch 4 for the become-follower transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:44,015] TRACE Controller 0 epoch 4 received response LeaderAndIsrResponse(4,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:46:44,016] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:-1,ISR:,LeaderEpoch:3,ControllerEpoch:3),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 4 (state.change.logger)
[2015-08-20 15:46:44,017] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(4,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:46:44,018] TRACE Broker 0 received LeaderAndIsr request (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) correlation id 5 from controller 0 epoch 4 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:44,020] TRACE Broker 0 handling LeaderAndIsr request correlationId 5 from controller 0 epoch 4 starting the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:44,022] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 4 with correlation id 5 for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:44,034] TRACE Broker 0 completed LeaderAndIsr request correlationId 5 from controller 0 epoch 4 for the become-leader transition for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:46:44,035] TRACE Controller 0 epoch 4 received response LeaderAndIsrResponse(5,Map((pythontest,0) -> 0),0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:46:44,036] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:4),ReplicationFactor:1),AllReplicas:0) for partition [pythontest,0] in response to UpdateMetadata request sent by controller 0 epoch 4 with correlation id 5 (state.change.logger)
[2015-08-20 15:46:44,037] TRACE Controller 0 epoch 4 received response UpdateMetadataResponse(5,0) for a request sent to broker id:0,host:192.168.1.6,port:9092 (state.change.logger)
[2015-08-20 15:59:40,976] TRACE Controller 0 epoch 4 changed partition [pythontest,0] state from OnlinePartition to OfflinePartition (state.change.logger)
[2015-08-20 15:59:40,977] TRACE Controller 0 epoch 4 started leader election for partition [pythontest,0] (state.change.logger)
[2015-08-20 15:59:40,989] ERROR Controller 0 epoch 4 initiated state change for partition [pythontest,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [pythontest,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:357)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:206)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:98)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:226)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:39)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:98)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:446)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:373)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.Utils$.inLock(Utils.scala:535)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$7.run(ZkClient.java:568)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2015-08-20 15:59:41,013] TRACE Controller 0 epoch 4 changed state of replica 0 for partition [pythontest,0] from OnlineReplica to OfflineReplica (state.change.logger)
